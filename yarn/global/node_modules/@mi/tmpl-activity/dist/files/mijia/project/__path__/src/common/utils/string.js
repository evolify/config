// eslint-disable-next-line no-control-regex
export const isDoubleByte = char => /[^\x00-\xff]/.test(char)

export function strlen(str) {
  if (str == null) {
    return 0
  }
  if (typeof str != "string") {
    str += ""
  }
  // eslint-disable-next-line no-control-regex
  return str.replace(/[^\x00-\xff]/g, "01").length
}

function reverse(str){
  return Array.from(str).reverse().join('')
}
function subStr(str, len, r){
  str = r ? reverse(str) : str
  let res = ''
  for(let i = 0 ;i<str.length;i++){
    if(strlen(res+str[i])>len){
      break
    }
    res += str[i]
  }
  return r ? reverse(res) : res
}

export function centerEllipsis(str, maxLen = 12) {
  if (strlen(str) <= maxLen) {
    return str
  }
  const halfLen = parseInt(maxLen / 2)
  return `${subStr(str, halfLen)}...${subStr(str, halfLen, true)}`
}

export const isPhoneNumber = phone => /^1[3456789]\d{9}$/.test(phone)