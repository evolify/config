var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { apply, url, template, mergeWith, applyTemplates, filter, move } from '@angular-devkit/schematics';
import { strings, normalize } from '@angular-devkit/core';
import * as path from 'path';
export function generate(sourcePath, opt) {
    var p = opt.path;
    var name = path.basename(p);
    var tmplSource = apply(url(sourcePath), [
        template(__assign(__assign(__assign({}, strings), opt), { dot: '.', name: name }))
    ]);
    return mergeWith(tmplSource);
}
/**
 * 生成单一文件
 * @param source
 * @param options
 */
export function generateFile(filename, options) {
    return mergeWith(apply(url('./files/'), [
        filter(function (file) {
            return file === filename;
        }),
        applyTemplates({
            classify: strings.classify,
            dasherize: strings.dasherize
        }),
        move(normalize(options.path))
    ]));
}
export * from "./template";
//# sourceMappingURL=index.js.map